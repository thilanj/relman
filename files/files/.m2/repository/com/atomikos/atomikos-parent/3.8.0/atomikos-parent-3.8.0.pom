<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.atomikos</groupId>
	<artifactId>atomikos-parent</artifactId>
	<version>3.8.0</version>
	<!-- With maven, a parent pom MUST have "pom" for packaging -->
	<packaging>pom</packaging>
	<name>Atomikos All POM</name>
	<url>http://www.atomikos.com/</url>
	<description>Reliability through Atomicity: manage your distributed transactions and protect your mission critical data</description>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<properties>
		<!-- we don't want to depend on platform's default encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<developers>
		<developer>
			<id>guypardon</id>
			<name>Guy Pardon</name>
			<email>guy@atomikos.com</email>
		</developer>
		<developer>
			<id>ludovicorban</id>
			<name>Ludovic Orban</name>
			<email>ludovic@atomikos.com</email>
		</developer>
		<developer>
			<id>pascalleclercq</id>
			<name>Pascal Leclercq</name>
			<email>pascal.leclercq@gmail.com</email>
		</developer>
		<developer>
			<id>dandiephouse</id>
			<name>Dan Diephouse</name>
			<email>dan@envoisolutions.com</email>
		</developer>
		<developer>
			<id>paulbrown</id>
			<name>Paul Brown</name>
			<email>prb@mult.ifario.us</email>
		</developer>
	</developers>
	<scm>
		<connection>scm:hg:http://atomikos.repositoryhosting.com/hg/atomikos/development</connection>
		<developerConnection>scm:hg:http://atomikos.repositoryhosting.com/hg/atomikos/development</developerConnection>
		<url>http://www.atomikos.com/</url>
	</scm>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<!--<version>2.2</version>-->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.groovy.maven</groupId>
					<artifactId>gmaven-plugin</artifactId>
					<version>1.0</version>
				</plugin>
				<plugin>
					<groupId>com.atlassian.maven.plugins</groupId>
					<artifactId>maven-clover2-plugin</artifactId>
					<version>3.0.1</version>
				</plugin>
				<plugin>
					<groupId>com.agilejava.docbkx</groupId>
					<artifactId>docbkx-maven-plugin</artifactId>
					<version>2.0.11</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
				<plugin>
					<groupId>com.mycila.maven-license-plugin</groupId>
					<artifactId>maven-license-plugin</artifactId>
					<version>1.8.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.ops4j.pax.exam</groupId>
					<artifactId>maven-paxexam-plugin</artifactId>
					<version>1.2.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.1</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.atlassian.maven.plugins</groupId>
				<artifactId>maven-clover2-plugin</artifactId>
				<!-- <configuration> <licenseLocation>/Users/guy/Downloads/clover.license.txt</licenseLocation> -->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- same as "-source 1.5 -target 1.5" for compilation -->
				<!-- see http://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html -->
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<argLine>-Xmx512m</argLine>
					<forkMode>always</forkMode>
					<includes>
						<include>**/*TestJUnit.java</include>
					</includes>
					<!-- this conf is made to ensure that no file wil be created outside -->
					<workingDirectory>${project.build.testOutputDirectory}</workingDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<failFast>true</failFast>
							<rules>
								<requireJavaVersion>
									<version>[1.5,1.6)</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<subpackages>com.atomikos</subpackages>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<!--PLQ "package" must be invoked before javadoc:aggregate-jar -->
					<preparationGoals>clean package javadoc:aggregate-jar install</preparationGoals>
					<goals>deploy</goals>
					<arguments>-DskipTests -Passemble</arguments>
					<tag>${releaseVersion}</tag>
					<!--<useReleaseProfile>false</useReleaseProfile> -->
					<!--PLQ several tries with CloudBees to exlude ".repository" subfolder,
						without any success so far... -->
					<!--<checkModificationExcludeList>.workspace/**/*,.repository/**/*</checkModificationExcludeList> -->
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jta_1.0.1B_spec</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>


	<!--TODO prevent tests execution during the build -->
	<profiles>
		<profile>
			<id>all</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<distributionManagement>
				<repository>
					<id>internal.release.repo</id>
					<name>Atomikos Internal Release Repository</name>
					<url>http://atomikos.dyndns.org:8088/nexus/content/repositories/releases</url>
				</repository>
				<snapshotRepository>
					<id>internal.snapshot.repo</id>
					<name>Atomikos Internal Snapshot Repository</name>
					<url>http://atomikos.dyndns.org:8088/nexus/content/repositories/snapshots/</url>
				</snapshotRepository>
			</distributionManagement>
			<!-- "modules" must correspond to file system hierarchy -->
			<modules>
				<module>public</module>
				<module>private</module>
			</modules>
		</profile>
		<profile>
			<id>opensource</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>2.1.2</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.7</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>

			</build>
			<modules>
				<module>public</module>
			</modules>
			<distributionManagement>
				<!--<snapshotRepository> <id>sonatype-nexus-snapshots</id> <name>Sonatype
					Nexus Snapshots</name> <url>${sonatypeOssDistMgmtSnapshotsUrl}</url> </snapshotRepository> -->
				<repository>
					<id>sonatype-nexus-staging</id>
					<name>Nexus Release Repository</name>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
		</profile>
	</profiles>

</project>
